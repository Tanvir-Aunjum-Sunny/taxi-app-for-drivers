package com.taxiapp.utils;

import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.os.Environment;

import com.taxiapp.vendor.app.R;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;

public class SuperLogger {
    private File appCrashFile;
    private File appLog;
    public static SuperLogger logger;
    private String crashReport;

    public static SuperLogger getInstance() {
        if (logger == null) {
            logger = new SuperLogger();
            setLogEnvironment();
        }
        return logger;
    }

    public void logAppCrash(String report, Context context) {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.getDefault());
        String time = sdf.format(new Date());
        try {
            PrintWriter logWriter = new PrintWriter(logger.appCrashFile);
            logWriter.write("Time: " + time + "\n");
            logWriter.write(report);
            logWriter.close();
            crashReport = report;
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    /*
     * private static void createNotfication(Context context) { String appName =
     * "Test"; String title = appName + " crashed"; String content =
     * "Send an email to developers";
     * NotificationUtils.createNotification(context, title,
     * content,getEmailIntent(), 1001,false); }
     */
    public static Intent getEmailIntent(Context ctx, String msg) {
        String appName = ctx.getString(R.string.app_name);
        String subject = appName + " App Crashed";

        String emailContent = " App Crash\n" + msg + "\n\n-AUTOGENERATED E-MAIL";
        List<String> attachment = new ArrayList<String>();
        attachment.add(logger.appCrashFile.getAbsolutePath());
        Intent emailIntent = Email.getEmailIntent(new String[]{"taxiappappcrashreports@smargav.com"}, subject,
                //Intent emailIntent = Email.getEmailIntent(new String[]{"amit@smargav.com"}, subject,
                emailContent, attachment);
        emailIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        return emailIntent;
    }


    /*
     * private static void createNotfication(Context context) { String appName =
     * "Test"; String title = appName + " crashed"; String content =
     * "Send an email to developers";
     * NotificationUtils.createNotification(context, title,
     * content,getEmailIntent(), 1001,false); }
     */
    public static Intent getEmailIntent(String subject, String emailContent, Context ctx) {
        List<String> attachment = new ArrayList<String>();

        Intent emailIntent = Email.getEmailIntent(new String[]{"amit@smargav.com"}, subject,
                emailContent, attachment);
        emailIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        return emailIntent;
    }

    private static void setLogEnvironment() {
        File dir = null;
        if (Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState())) {
            dir = new File(Environment.getExternalStorageDirectory(), "Test");
        } else {
            dir = new File(Environment.getDataDirectory(), "Test");
        }
        if (!dir.exists()) {
            dir.mkdir();
        }
        logger.appCrashFile = new File(dir, "appCrash.txt");
    }

    public static void logMessage(String message) {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.getDefault());
        String time = sdf.format(new Date());
        try {
            PrintWriter logWriter = new PrintWriter(new FileOutputStream(logger.appLog), true);
            logWriter.append("\nTime: " + time + "\n");
            logWriter.append(message);
            logWriter.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }


    public static class Email {
        public static void startEmailActivity(Context context, String[] emailTo, String[] emailCC,
                                              String subject, String emailText, List<String> filePaths) {
            // need to "send multiple" to get more than one attachment
            final Intent emailIntent = new Intent(android.content.Intent.ACTION_SEND_MULTIPLE);
            emailIntent.setType("text/plain");
            if (emailTo != null) {
                emailIntent.putExtra(android.content.Intent.EXTRA_EMAIL, emailTo);
            }
            if (emailCC != null) {
                emailIntent.putExtra(android.content.Intent.EXTRA_CC, emailCC);
            }
            emailIntent.putExtra(Intent.EXTRA_SUBJECT, subject);
            emailIntent.putExtra(Intent.EXTRA_TEXT, emailText);
            // has to be an ArrayList
            if (filePaths != null) {
                ArrayList<Uri> uris = new ArrayList<Uri>();
                // convert from paths to Android friendly Parcelable Uri's
                for (String file : filePaths) {
                    File fileIn = new File(file);
                    Uri u = Uri.fromFile(fileIn);
                    uris.add(u);
                }
                emailIntent.putParcelableArrayListExtra(Intent.EXTRA_STREAM, uris);

            }
            context.startActivity(Intent.createChooser(emailIntent, "Send mail..."));
        }

        public static Intent getEmailIntent(String[] emailTo, String[] emailCC, String subject,
                                            String emailText, List<String> attachments) {
            // need to "send multiple" to get more than one attachment
            final Intent emailIntent = new Intent(android.content.Intent.ACTION_SEND_MULTIPLE);
            emailIntent.setType("text/plain");
            if (emailTo != null) {
                emailIntent.putExtra(android.content.Intent.EXTRA_EMAIL, emailTo);
            }
            if (emailCC != null) {
                emailIntent.putExtra(android.content.Intent.EXTRA_CC, emailCC);
            }
            emailIntent.putExtra(Intent.EXTRA_SUBJECT, subject);
            emailIntent.putExtra(Intent.EXTRA_TEXT, emailText);
            // has to be an ArrayList
            if (attachments != null) {
                ArrayList<Uri> uris = new ArrayList<Uri>();
                // convert from paths to Android friendly Parcelable Uri's
                for (String file : attachments) {
                    File fileIn = new File(file);
                    Uri u = Uri.fromFile(fileIn);
                    uris.add(u);
                }
                emailIntent.putParcelableArrayListExtra(Intent.EXTRA_STREAM, uris);

            }
            return (Intent.createChooser(emailIntent, "Send mail..."));
        }

        public static Intent getEmailIntent(String[] emailTo, String subject, String emailText,
                                            List<String> attachments) {
            // need to "send multiple" to get more than one attachment
            final Intent emailIntent = new Intent(android.content.Intent.ACTION_SEND_MULTIPLE);
            emailIntent.setType("text/plain");
            if (emailTo != null) {
                emailIntent.putExtra(android.content.Intent.EXTRA_EMAIL, emailTo);
            }
            emailIntent.putExtra(Intent.EXTRA_SUBJECT, subject);
            emailIntent.putExtra(Intent.EXTRA_TEXT, emailText);
            // has to be an ArrayList
            if (attachments != null) {
                ArrayList<Uri> uris = new ArrayList<Uri>();
                // convert from paths to Android friendly Parcelable Uri's
                for (String file : attachments) {
                    File fileIn = new File(file);
                    Uri u = Uri.fromFile(fileIn);
                    uris.add(u);
                }
                emailIntent.putParcelableArrayListExtra(Intent.EXTRA_STREAM, uris);

            }
            return (Intent.createChooser(emailIntent, "Send mail..."));
        }

    }

}
